<?php

require_once('file.inc');

/**
 * Implementation of hook_perm()
 */
function pdf_slideshow_perm() {
	return array('administer pdf slideshow');
}

/**
 * Implementation of hook_menu()
 */
function pdf_slideshow_menu($may_cache) {
	
	drupal_add_css(drupal_get_path('module', 'pdf_slideshow').'/css/pdf_slideshow.css');
	drupal_add_js(drupal_get_path('module', 'pdf_slideshow').'/js/jquery.fancybox/jquery.fancybox-1.2.1.pack.js');
	drupal_add_js(drupal_get_path('module', 'pdf_slideshow').'/js/jquery.fancybox/jquery.easing.1.3.js');
	drupal_add_css(drupal_get_path('module', 'pdf_slideshow').'/js/jquery.fancybox/jquery.fancybox.css');
	
	
	
	$items = array();
	if ($may_cache) {
		$items[] = array(
	      'path' => 'admin/settings/pdfslideshow',
	      'title' => t('PDF Slideshow'),
	      'description' => t('Configure PDF Slideshow settings.'),
	      'callback' => 'drupal_get_form',
	      'callback arguments' => array('pdf_slideshow_admin_settings'),
	      'access' => user_access('administer pdf slideshow'),
	      'type' => MENU_NORMAL_ITEM,
	    );
	}
	else {
		$nid = arg(1);
		$fid = arg(3);
		if (is_numeric($nid) && is_numeric($fid) && $node = node_load($nid)) {
			if ($file = $node->files[$fid]) {
				$items[] = array(
				  'path' => 'node/'. $node->nid.'/file/'.$fid.'/show', 
				  'title' => t('View'),
		          'callback' => 'node_pdf_slideshow',
		          'callback arguments' => array(arg(1), arg(3)),
		          'access' => node_access('view', $node),
		          'type' => MENU_CALLBACK
				);
			}
		} 
		if (is_numeric($nid) && is_numeric($fid) && $node = node_load($nid)) {
			if ($file = $node->files[$fid]) {
				$items[] = array(
				  'path' => 'node/'. $node->nid.'/file/'.$fid.'/gallery', 
				  'title' => t('Gallery view'),
		          'callback' => 'node_pdf_gallery',
		          'callback arguments' => array(arg(1), arg(3)),
		          'access' => node_access('view', $node),
		          'type' => MENU_CALLBACK
				);
			}
		} 
			
	}
	return $items;
}




function _handle_position($images) {
	$max = count($images);
	//$max--;
	if (!is_numeric($_GET['position']) || $_GET['position'] < 0 || !$_GET['position']) {
		return 1;
	}
	if ($_GET['position'] > $max) {
		return $max; 
	}
	return $_GET['position'];
}

function theme_pdf_slideshow_navigator($position, $fragment = 'pdf_preview_box', $counter = 1) {
	if ($counter > 1) {
		$output .= '<div class="pdf_navigation">';
	
		$output .= '<div style="float: left;">';
			if ($position > 1) $output .= l(t('< Previous'), $_GET['q'], array(), 'position='.($position ? $prev = $position - 1 : 1), $fragment);
		$output .= '</div>';
		
		$output .= '<div style="float: right;">';
			if ($position != $counter) $output .= l(t('Next >'), $_GET['q'], array(), 'position='.($position ? $next = $position + 1 : 1), $fragment);
		$output .= '</div>';
		
	$output .= '</div>';
	return $output;
	}
}

function theme_pdf_slideshow($node, $file, $ret) {
	drupal_set_title(l($node->title, 'node/'.$node->nid));

	if (module_exists('euwi_breadcrumb')) {
		$breadcrumb = init_breadcrumb();	
		foreach (module_implements('breadcrumb_alter') AS $module) {
	   		$function = $module .'_breadcrumb_alter';
	   		$function($breadcrumb, $node, 'node');
	   	}
	   	array_pop($breadcrumb);
	   	array_push($breadcrumb, l($node->title, 'node/'.$node->nid));
	   	array_push($breadcrumb, t('Document preview'));
	    drupal_set_breadcrumb($breadcrumb);
	}
	
	
	$target_dir = $ret['path'];
	$images = convert_api_file_list($target_dir);
	$target_rel_dir = $ret['rel_path'];
	$position = _handle_position($images);
	$pos_align = ($position - 1);
	
	$output .= '<div id="pdf_preview_box">';
	
	/* Navigator */
	$output .= theme('pdf_slideshow_navigator', $position, 'pdf_preview_box', count($images));
	
	
	$output .= theme('image', $target_rel_dir.'/'.$images[$pos_align], array(), array(), array('width' => '600'));
	//var_dump($output); die;
	
	/* Navigator */
	$output .= theme('pdf_slideshow_navigator', $position, 'pdf_preview_box', count($images));
	
	$output .= '</div>';
	
	$output .= '<div style="text-align: center;">';
  	$output .= l(t('View as PDF'), file_create_url($file->filepath), array('class' => 'pdf')). ' | ';
  	$output .= l(t('View as Gallery'), str_replace('show', 'gallery', $_GET['q']));
	$output .= '</div>';
	
	 
	return $output;	
}



function theme_pdf_gallery($node, $file, $ret) {
	drupal_set_title(l($node->title, 'node/'.$node->nid));

	if (module_exists('euwi_breadcrumb')) {
		$breadcrumb = init_breadcrumb();	
		foreach (module_implements('breadcrumb_alter') AS $module) {
	   		$function = $module .'_breadcrumb_alter';
	   		$function($breadcrumb, $node, 'node');
	   	}
	   	array_pop($breadcrumb);
	   	array_push($breadcrumb, l($node->title, 'node/'.$node->nid));
	   	array_push($breadcrumb, t('Document preview'));
	    drupal_set_breadcrumb($breadcrumb);
	}
	
	
	$target_dir = $ret['path'];
	$images = convert_api_file_list($target_dir);
	$target_rel_dir = $ret['rel_path'];
	$position = _handle_position($images);
	$pos_align = ($position - 1);
	$output .= '<div id="pdf_preview_gallery" style="height: 600px; overflow: auto;">';
	
	foreach($images as $image) {
		$output .= l(theme('imagecache', 'pdf_gallery_thumb', $target_rel_dir.'/'.$image, array(), array(), array('style' => 'margin-right: 15px;')),
					 file_create_url($target_rel_dir.'/'.$image), array('class' => 'gallery', 'rel' => 'pdf_gallery'), NULL, NULL, FALSE, TRUE);
	}

	drupal_add_js('
		
	$(document).ready(function() { 
		/* This is basic - uses default settings */
		  $("a.gallery").fancybox({ "zoomSpeedIn": 300, "zoomSpeedOut": 300, "overlayShow": false }); 
	}); 
	
	','inline');
	
	
	$output .= '</div>';
	
	$output .= '<div style="text-align: center;">';
  	$output .= l(t('View as PDF'), file_create_url($file->filepath), array('class' => 'pdf')). ' | ';
  	$output .= l(t('View as Book'), str_replace('gallery', 'show', $_GET['q']));
	$output .= '</div>';
	
	 
	return $output;	
}


function node_pdf_slideshow($nid, $fid) {
	if (is_numeric($nid) && $node = node_load($nid)) {
		if ($file = $node->files[$fid]) {
			if ($res = conversion_api($file, $nid)) { 
				return theme('pdf_slideshow', $node, $file, $res);
			}
			else {
				drupal_set_message(t('Error on conversion, please try again.'));
				drupal_goto('node/' . $node->nid);
			}
		}
		else {
			drupal_goto('node/' . $node->nid);
		}
	} 
}

function node_pdf_gallery($nid, $fid) {
	if (is_numeric($nid) && $node = node_load($nid)) {
		if ($file = $node->files[$fid]) {
			if ($res = conversion_api($file, $nid)) { 
				return theme('pdf_gallery', $node, $file, $res);
			}
			else {
				drupal_set_message(t('Error on conversion, please try again.'));
				drupal_goto('node/' . $node->nid);
			}
		}
		else {
			drupal_goto('node/' . $node->nid);
		}
	} 
}






function pdf_slideshow_admin_settings() {
	$form['general'] = array(
	    '#type' => 'fieldset',
	    '#title' => t('General settings'),
	    '#collapsible' => TRUE,
	    '#collapsed' => FALSE,
	  );
	$form['general']['imagemagick_path'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Imagemagick path'),
	    '#size' => 50,
	    '#default_value' => variable_get('imagemagick_path', exec('/usr/bin/which convert')),
	    '#description' => t('Path to imagemagick.'),
	  );
	return system_settings_form($form);
}


function phptemplate_upload_attachments($files) {
  $node = node_load(arg(1));
  $header = array(t('Attachment'), t('Size'), t('Preview'));
  $rows = array();
 
  foreach ($files as $file) {
    $file = (object)$file;
    if ($file->list && !$file->remove) {
      // Generate valid URL for both existing attachments and preview of new attachments (these have 'upload' in fid)
      $href = file_create_url((strpos($file->fid, 'upload') === FALSE ? $file->filepath : file_create_filename($file->filename, file_create_path())));
      $text = $file->description ? $file->description : $file->filename;
	  
	  $preview_link = l(t('Preview'), 'node/'.$node->nid.'/file/'.$file->fid.'/show');

	  $rows[] = array(
		  l($text, $href),
		  format_size($file->filesize),
		  $preview_link,
	  );
    }
  }
  if (count($rows)) {
    return theme('table', $header, $rows, array('id' => 'attachments'));
  }
}



?>
